name: Frontend Security Analysis Reports

on:
  push:
    branches: [ main, 'feature/*' ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays

jobs:
  security-reports:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # Install dependencies
      - name: Install dependencies
        run: npm ci
        continue-on-error: true

      # Linting Report
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

     # DAST Analysis with OWASP ZAP
      - name: Start frontend application
        run: |
          npm run dev &
          sleep 20  # Increased sleep time to ensure dev server is ready
        continue-on-error: true

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          target: 'http://localhost:3000'  # Adjust this port if your dev server uses a different one
          token: ${{ secrets.GITHUB_TOKEN }}
          cmd_options: '-t http://localhost:3000 -r zap_report.html'
        continue-on-error: true

      # Upload all reports as artifacts
      - name: Upload security reports
        uses: actions/upload-artifact@v3
        if: always()  # This ensures reports are uploaded even if previous steps fail
        with:
          name: security-reports
          path: |
            zap_report.html
            eslint_report.json